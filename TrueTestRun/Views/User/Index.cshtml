@model List<TrueTestRun.Models.User>
@using TrueTestRun.Models
@{
    ViewBag.Title = HttpContext.GetGlobalResourceObject("Resources", "UsersList").ToString();
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Get current user for role checking
    var currentUser = Session["CurrentUser"] as User;
    bool isAdmin = currentUser != null && currentUser.Role == UserRole.Admin;
}

@if (ViewBag.WindowsUser != null)
{
    <div class="notification info">
        <div class="notification-icon">ⓘ</div>
        <div class="notification-content">
            <div class="notification-text">
                @HttpContext.GetGlobalResourceObject("Resources", "HelloUser").ToString().Replace("{0}", ViewBag.WindowsUser.ToString())
            </div>
        </div>
    </div>
}

<!-- Page Header -->
<div class="page-header">
    <div class="page-title-section">
        <h1 class="page-title">@ViewBag.Title</h1>
        <div class="page-subtitle">社員管理システム | Employee Management System</div>
    </div>
    <div class="page-actions">
        <button class="action-btn secondary" onclick="refreshTable()">
            <span class="action-icon">↻</span>
            @HttpContext.GetGlobalResourceObject("Resources", "Refresh")
        </button>
        @if (isAdmin)
        {
            <a href="@Url.Action("Register", "Account")" class="action-btn primary">
                <span class="action-icon">⊕</span>
                @HttpContext.GetGlobalResourceObject("Resources", "AddUser")
            </a>
        }
    </div>
</div>

<!-- Compact Statistics Panel -->
<div class="statistics-panel">
    <div class="statistics-row">
        <div class="stat-item">
            <div class="stat-icon">◈</div>
            <div class="stat-content">
                <div class="stat-number">@(Model?.Count ?? 0)</div>
                <div class="stat-label">@HttpContext.GetGlobalResourceObject("Resources", "TotalUsers")</div>
            </div>
        </div>
        <div class="stat-divider">|</div>
        <div class="stat-item">
            <div class="stat-icon">◉</div>
            <div class="stat-content">
                <div class="stat-number">@(Model?.Count(u => u.Role != UserRole.DataEntry) ?? 0)</div>
                <div class="stat-label">Active Managers</div>
            </div>
        </div>
        <div class="stat-divider">|</div>
        <div class="stat-item">
            <div class="stat-icon">◐</div>
            <div class="stat-content">
                <div class="stat-number">@(Model?.Count(u => u.Role == UserRole.DataEntry) ?? 0)</div>
                <div class="stat-label">Data Entry Staff</div>
            </div>
        </div>
    </div>
</div>

<!-- Enhanced User Data Table -->
<div class="data-table">
    <!-- Table Header with Search -->
    <div class="table-header">
        <div class="table-title">
            <div class="title-main">
                <span class="title-icon">◈</span>
                @HttpContext.GetGlobalResourceObject("Resources", "UsersList")
            </div>
            <div class="title-sub">Employee Database Management</div>
        </div>
        <div class="table-actions">
            <div class="search-container">
                <div class="search-input-wrapper">
                    <span class="search-icon">◎</span>
                    <input type="text"
                           id="searchInput"
                           class="search-input"
                           placeholder="@HttpContext.GetGlobalResourceObject("Resources", "SearchPlaceholder")" />
                    <button class="search-clear" id="clearSearch" style="display: none;">×</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Professional User Table -->
    <div class="table-container">
        <table class="data-table-content" id="userTable">
            <thead>
                <tr>
                    <th class="col-id">
                        <div class="header-content">
                            <span class="header-text">社員ID</span>
                            <span class="header-subtext">Employee ID</span>
                        </div>
                    </th>
                    <th class="col-name">
                        <div class="header-content">
                            @*<span class="header-text">氏名</span>*@
                            <span class="header-subtext">@HttpContext.GetGlobalResourceObject("Resources", "FullName")</span>
                        </div>
                    </th>
                    <th class="col-department">
                        <div class="header-content">
                            @*<span class="header-text">部署</span>*@
                            <span class="header-subtext">@HttpContext.GetGlobalResourceObject("Resources", "Department")</span>
                        </div>
                    </th>
                    <th class="col-position">
                        <div class="header-content">
                            @*<span class="header-text">役職</span>*@
                            <span class="header-subtext">@HttpContext.GetGlobalResourceObject("Resources", "Position")</span>
                        </div>
                    </th>
                    <th class="col-email">
                        <div class="header-content">
                            @*<span class="header-text">メール</span>*@
                            <span class="header-subtext">@HttpContext.GetGlobalResourceObject("Resources", "Email")</span>
                        </div>
                    </th>
                    <th class="col-factory">
                        <div class="header-content">
                            @*<span class="header-text">工場</span>*@
                            <span class="header-subtext">@HttpContext.GetGlobalResourceObject("Resources", "Factory")</span>
                        </div>
                    </th>
                    <th class="col-seal">
                        <div class="header-content">
                            @*<span class="header-text">印鑑</span>*@
                            <span class="header-subtext">@HttpContext.GetGlobalResourceObject("Resources", "Seal")</span>
                        </div>
                    </th>
                    <th class="col-actions">
                        <div class="header-content">
                            @*<span class="header-text">操作</span>*@
                            <span class="header-subtext">@HttpContext.GetGlobalResourceObject("Resources", "Actions")</span>
                        </div>
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Count > 0)
                {
                    foreach (var u in Model)
                    {
                        <tr class="table-row" data-search="@($"{u.ADID} {u.Name} {u.DeptCode} {u.Group} {u.Title}".ToLower())">
                            <td class="col-id">
                                <div class="employee-id">@u.ADID</div>
                            </td>
                            <td class="col-name">
                                <div class="employee-info">
                                    <div class="employee-avatar">
                                        <span class="avatar-initial">@(u.Name?.Substring(u.Name.LastIndexOf(' ') + 1).Substring(0, 1).ToUpper() ?? "?")</span>
                                    </div>
                                    <div class="employee-details">
                                        <div class="employee-name">@u.Name</div>
                                        @if (!string.IsNullOrEmpty(u.Group))
                                        {
                                            <div class="employee-group">@u.Group</div>
                                        }
                                    </div>
                                </div>
                            </td>
                            <td class="col-department">
                                <div class="department-badge">@u.DeptCode</div>
                            </td>
                            <td class="col-position">
                                @{
                                    string positionClass;
                                    switch (u.Title)
                                    {
                                        case "G.M":
                                            positionClass = "position-gm";
                                            break;
                                        case "Quản lý trung cấp":
                                            positionClass = "position-middle-manager";
                                            break;
                                        case "Quản lý sơ cấp":
                                            positionClass = "position-manager";
                                            break;
                                        case "Staff":
                                            positionClass = "position-staff";
                                            break;
                                        default:
                                            positionClass = "position-other";
                                            break;
                                    }
                                }
                                <div class="position-badge @positionClass">@u.Title</div>
                            </td>
                            <td class="col-email">
                                @if (!string.IsNullOrEmpty(u.Email))
                                {
                                    <a href="mailto:@u.Email" class="email-link">@u.Email</a>
                                }
                                else
                                {
                                    <span class="no-data">—</span>
                                }
                            </td>
                            <td class="col-factory">
                                <div class="factory-info">@(u.Factory ?? "—")</div>
                            </td>
                            <td class="col-seal">
                                @if (u.Role != UserRole.DataEntry)
                                {
                                    <div class="seal-preview">
                                        <img src="@Url.Action("UserSeal", "Account", new { department = u.DeptCode, name = u.Name })"
                                             alt="@u.Name の印鑑"
                                             class="seal-image"
                                             loading="lazy"
                                             onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';" />
                                        <div class="seal-placeholder" style="display: none;">
                                            <span class="seal-icon">◎</span>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <span class="no-data">—</span>
                                }
                            </td>
                            <td class="col-actions">
                                <div class="action-buttons">
                                    <a class="action-btn-small edit"
                                       href="@Url.Action("Edit", "User", new { id = u.ADID })"
                                       title="@HttpContext.GetGlobalResourceObject("Resources", "EditInfo")">
                                        ◆
                                    </a>
                                    @if (isAdmin)
                                    {
                                        <button class="action-btn-small delete"
                                                onclick="confirmDelete('@u.ADID', '@u.Name')"
                                                title="@HttpContext.GetGlobalResourceObject("Resources", "DeleteUser")">
                                            ◯
                                        </button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="8" class="empty-state">
                            <div class="empty-content">
                                <div class="empty-icon">◯</div>
                                <div class="empty-title">@HttpContext.GetGlobalResourceObject("Resources", "NoUsersInSystem")</div>
                                <div class="empty-subtitle">@HttpContext.GetGlobalResourceObject("Resources", "AddFirstUser")</div>
                                @if (isAdmin)
                                {
                                    <a href="@Url.Action("Register", "Account")" class="action-btn primary">
                                        <span class="action-icon">⊕</span>
                                        @HttpContext.GetGlobalResourceObject("Resources", "AddFirstUserButton")
                                    </a>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Table Footer -->
    <div class="table-footer">
        <div class="table-info">
            <span class="footer-icon">ⓘ</span>
            <span>Showing <strong id="recordCount">@(Model?.Count ?? 0)</strong> users in system</span>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Store the delete confirmation message properly decoded
        var deleteConfirmMessage = @Html.Raw(Json.Encode(HttpContext.GetGlobalResourceObject("Resources", "ConfirmDeleteUser").ToString()));

        $(document).ready(function () {
            // Search functionality
            $('#searchInput').on('input', function() {
                const searchTerm = $(this).val().toLowerCase().trim();
                const $clearBtn = $('#clearSearch');

                if (searchTerm) {
                    $clearBtn.show();
                } else {
                    $clearBtn.hide();
                }

                let visibleCount = 0;
                $('.table-row').each(function() {
                    const searchData = $(this).data('search');
                    if (!searchTerm || searchData.includes(searchTerm)) {
                        $(this).show();
                        visibleCount++;
                    } else {
                        $(this).hide();
                    }
                });

                // Update counter
                $('#recordCount').text(visibleCount);
            });

            // Clear search
            $('#clearSearch').on('click', function() {
                $('#searchInput').val('');
                $(this).hide();
                $('.table-row').show();
                $('#recordCount').text(@(Model?.Count ?? 0));
            });

            // Auto dismiss notifications
            setTimeout(function () {
                $('.notification').fadeOut('slow');
            }, 5000);

            // Table row hover effects
            $('.table-row').hover(
                function () { $(this).addClass('hover'); },
                function () { $(this).removeClass('hover'); }
            );
        });

        function refreshTable() {
            window.location.reload();
        }

        function confirmDelete(adid, name) {
            // Use the properly decoded message and replace placeholders
            var message = deleteConfirmMessage.replace('{0}', name).replace('{1}', adid);
            if (confirm(message)) {
                window.location.href = '@Url.Action("Delete", "User")' + '?id=' + adid;
            }
        }
    </script>
}

<style>
    /* ===== Desktop-only styling (mobile rules removed) ===== */

    /* Fine-tuning variables for alignment */
    :root {
        --name-avatar: 36px;
        --name-gap: 0.75rem;
        --name-tweak: 1px;
    }

    /* Page Header */
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 2rem;
        padding-bottom: 1.5rem;
        border-bottom: 1px solid var(--border-light);
    }

    .page-title-section {
        flex: 1;
    }

        .page-title-section h1.page-title {
            font-size: 1.875rem;
            font-weight: 600;
            color: var(--text-primary);
            margin: 0 0 0.5rem 0;
        }

    .page-subtitle {
        color: var(--text-secondary);
        font-size: 0.875rem;
        margin: 0;
    }

    .page-actions {
        display: flex;
        gap: 1rem;
        align-items: center;
        flex-shrink: 0;
    }

    /* Notifications */
    .notification {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem 1.5rem;
        margin-bottom: 1.5rem;
        border-radius: 8px;
        border: 1px solid;
    }

        .notification.info {
            background: #eff6ff;
            border-color: var(--corporate-blue);
            color: #1e40af;
        }

    .notification-icon {
        font-size: 1.25rem;
        flex-shrink: 0;
    }

    .notification-content {
        flex: 1;
    }

    /* Compact Statistics Panel */
    .statistics-panel {
        background: var(--background-white);
        border-radius: 8px;
        border: 1px solid var(--border-light);
        margin-bottom: 1.5rem;
        padding: 1rem 1.5rem;
        box-shadow: var(--shadow-soft);
    }

    .statistics-row {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1.5rem;
    }

    .stat-item {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        text-align: center;
    }

    .stat-icon {
        font-size: 1.25rem;
        flex-shrink: 0;
        opacity: 0.7;
        color: var(--corporate-blue);
    }

    .stat-content {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
    }

    .stat-number {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--text-primary);
        line-height: 1;
        margin-bottom: 0.25rem;
    }

    .stat-label {
        font-size: 0.8rem;
        color: var(--text-secondary);
        line-height: 1.2;
    }

    .stat-divider {
        color: var(--border-medium);
        font-size: 1.25rem;
        opacity: 0.5;
    }

    /* Enhanced Data Table */
    .data-table {
        background: var(--background-white);
        border-radius: 12px;
        border: 1px solid var(--border-light);
        box-shadow: var(--shadow-soft);
        overflow: hidden;
        flex: 1;
        display: flex;
        flex-direction: column;
        height: calc(100vh - 280px);
    }

    .table-header {
        background: var(--background-secondary);
        padding: 1.25rem 1.5rem;
        border-bottom: 1px solid var(--border-light);
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-shrink: 0;
    }

    .table-title .title-main {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        font-size: 1.125rem;
        font-weight: 600;
        color: var(--text-primary);
        line-height: 1.2;
    }

    .title-icon {
        font-size: 1rem;
        opacity: 0.7;
        color: var(--corporate-blue);
    }

    .table-title .title-sub {
        font-size: 0.8rem;
        color: var(--text-secondary);
        margin-top: 0.25rem;
    }

    .table-actions {
        display: flex;
        gap: 1rem;
        align-items: center;
    }

    /* Search Container */
    .search-container {
        min-width: 300px;
    }

    .search-input-wrapper {
        position: relative;
        display: flex;
        align-items: center;
    }

    .search-input {
        width: 100%;
        padding: 0.75rem 1rem 0.75rem 2.5rem;
        border: 1px solid var(--border-light);
        border-radius: 6px;
        font-size: 0.875rem;
        background: var(--background-white);
        transition: all 0.2s ease;
    }

        .search-input:focus {
            outline: none;
            border-color: var(--corporate-blue);
            box-shadow: 0 0 0 3px rgba(30, 58, 138, 0.1);
        }

    .search-icon {
        position: absolute;
        left: 0.75rem;
        color: var(--text-muted);
        font-size: 0.875rem;
        pointer-events: none;
        z-index: 1;
    }

    .search-clear {
        position: absolute;
        right: 0.5rem;
        background: none;
        border: none;
        color: var(--text-muted);
        padding: 0.25rem;
        border-radius: 3px;
        cursor: pointer;
        transition: all 0.2s ease;
        font-size: 1rem;
    }

        .search-clear:hover {
            background: var(--background-secondary);
            color: var(--text-primary);
        }

    /* Perfect Table Container */
    .table-container {
        flex: 1;
        overflow: auto;
        position: relative;
    }

    .data-table-content {
        width: 100%;
        border-collapse: collapse;
        font-size: 0.875rem;
        table-layout: fixed;
    }

        /* Column Headers */
        .data-table-content th {
            background: var(--background-secondary);
            padding: 1rem 1.25rem;
            text-align: left;
            font-weight: 600;
            color: var(--text-primary);
            border-bottom: 2px solid var(--border-light);
            font-size: 0.8rem;
            position: sticky;
            top: 0;
            z-index: 10;
            vertical-align: middle;
        }

            .data-table-content th .header-content {
                display: flex;
                flex-direction: column;
                gap: 0.25rem;
            }

            /* Desktop alignment fixes */
            .data-table-content th.col-factory,
            .data-table-content th.col-seal,
            .data-table-content th.col-actions {
                text-align: center;
            }

                .data-table-content th.col-factory .header-content,
                .data-table-content th.col-seal .header-content,
                .data-table-content th.col-actions .header-content {
                    align-items: center;
                }

            /* Align Name header with avatar */
            .data-table-content th.col-name .header-content {
                padding-left: 0;
            }

            .data-table-content th.col-name {
                padding-left: calc(1.25rem + var(--name-avatar) + var(--name-gap) + var(--name-tweak));
            }

        /* Table Cells */
        .data-table-content td {
            padding: 1rem 1.25rem;
            border-bottom: 1px solid var(--border-light);
            font-size: 0.875rem;
            vertical-align: middle;
        }

    .table-row {
        transition: all 0.15s ease;
    }

        .table-row:hover,
        .table-row.hover {
            background: var(--background-primary);
            transform: translateY(-1px);
            box-shadow: var(--shadow-subtle);
        }

    /* Fixed Column Widths */
    .col-id {
        width: 10%;
    }

    .col-name {
        width: 18%;
    }

    .col-department {
        width: 12%;
    }

    .col-position {
        width: 15%;
    }

    .col-email {
        width: 20%;
    }

    .col-factory {
        width: 10%;
        text-align: center;
    }

    .col-seal {
        width: 8%;
        text-align: center;
    }

    .col-actions {
        width: 7%;
        text-align: center;
    }

    /* Employee Information */
    .employee-id {
        font-family: 'Consolas', 'Monaco', monospace;
        font-weight: 600;
        color: var(--corporate-blue);
        font-size: 0.9rem;
    }

    .employee-info {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .employee-avatar {
        width: var(--name-avatar);
        height: var(--name-avatar);
        border-radius: 50%;
        background: var(--corporate-blue);
        color: var(--background-white);
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 0.875rem;
        flex-shrink: 0;
    }

    .employee-details {
        min-width: 0;
        flex: 1;
    }

    .employee-name {
        font-weight: 500;
        color: var(--text-primary);
        line-height: 1.3;
        font-size: 0.875rem;
    }

    .employee-group {
        font-size: 0.75rem;
        color: var(--text-secondary);
        margin-top: 0.125rem;
    }

    /* Department and Position Badges */
    .department-badge {
        background: #e6f3ff;
        color: var(--corporate-blue);
        padding: 0.5rem 0.875rem;
        border-radius: 6px;
        font-weight: 500;
        font-size: 0.8rem;
        border: 1px solid #b3d9ff;
        display: inline-block;
        text-align: center;
    }

    .position-badge {
        padding: 0.5rem 0.875rem;
        border-radius: 6px;
        font-weight: 500;
        font-size: 0.8rem;
        display: inline-block;
        border: 1px solid transparent;
        text-align: center;
        min-width: 80px;
    }

    .position-gm {
        background: #fee2e2;
        color: #991b1b;
        border-color: #fecaca;
    }

    .position-middle-manager {
        background: #fef3c7;
        color: #92400e;
        border-color: #fde68a;
    }

    .position-manager {
        background: #dbeafe;
        color: #1e40af;
        border-color: #93c5fd;
    }

    .position-staff {
        background: #dcfce7;
        color: #166534;
        border-color: #bbf7d0;
    }

    .position-other {
        background: var(--background-secondary);
        color: var(--text-secondary);
        border-color: var(--border-light);
    }

    /* Utilities */
    .email-link {
        color: var(--corporate-blue);
        text-decoration: none;
        font-size: 0.875rem;
        overflow-wrap: anywhere;
    }

        .email-link:hover {
            color: #1e40af;
            text-decoration: underline;
        }

    .factory-info {
        color: var(--text-primary);
        font-size: 0.875rem;
        font-weight: 500;
        text-align: center;
    }

    .no-data {
        color: var(--text-muted);
        font-style: italic;
        text-align: center;
    }

    /* Seal Preview */
    .seal-preview {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .seal-image {
        width: 36px;
        height: 36px;
        border: 1px solid var(--border-light);
        border-radius: 6px;
        object-fit: contain;
        background: var(--background-white);
        transition: transform 0.2s ease;
    }

        .seal-image:hover {
            transform: scale(1.3);
            z-index: 100;
            position: relative;
            box-shadow: var(--shadow-medium);
        }

    .seal-placeholder {
        width: 36px;
        height: 36px;
        border: 1px dashed var(--border-light);
        border-radius: 6px;
        background: var(--background-secondary);
        display: flex;
        align-items: center;
        justify-content: center;
        color: var(--text-muted);
    }

    .seal-icon {
        font-size: 1rem;
    }

    /* Action Buttons */
    .action-buttons {
        display: flex;
        gap: 0.5rem;
        justify-content: center;
        align-items: center;
    }

    .action-btn-small {
        width: 32px;
        height: 32px;
        border: 1px solid var(--border-light);
        border-radius: 6px;
        background: var(--background-white);
        color: var(--text-secondary);
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        transition: all 0.2s ease;
        cursor: pointer;
        font-size: 0.9rem;
    }

        .action-btn-small:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-soft);
            text-decoration: none;
        }

        .action-btn-small.edit:hover {
            border-color: var(--warning-amber);
            background: #fffbeb;
            color: var(--warning-amber);
        }

        .action-btn-small.delete:hover {
            border-color: var(--error-red);
            background: #fef2f2;
            color: var(--error-red);
        }

    /* Main Action Buttons */
    .action-btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1.25rem;
        border-radius: 6px;
        font-size: 0.875rem;
        font-weight: 500;
        text-decoration: none;
        transition: all 0.2s ease;
        border: 1px solid transparent;
        cursor: pointer;
    }

        .action-btn.primary {
            background: var(--corporate-blue);
            color: var(--background-white);
            border-color: var(--corporate-blue);
        }

            .action-btn.primary:hover {
                background: #1e40af;
                border-color: #1e40af;
                color: var(--background-white);
                transform: translateY(-1px);
                box-shadow: var(--shadow-medium);
            }

        .action-btn.secondary {
            background: var(--background-secondary);
            color: var(--text-secondary);
            border-color: var(--border-light);
        }

            .action-btn.secondary:hover {
                background: var(--background-primary);
                color: var(--text-primary);
                border-color: var(--border-medium);
                transform: translateY(-1px);
            }

    .action-icon {
        font-size: 1rem;
        flex-shrink: 0;
    }

    /* Empty State */
    .empty-state {
        padding: 4rem 2rem;
        text-align: center;
    }

    .empty-content {
        max-width: 400px;
        margin: 0 auto;
    }

    .empty-icon {
        font-size: 3rem;
        color: var(--text-muted);
        margin-bottom: 1.5rem;
    }

    .empty-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--text-primary);
        margin-bottom: 0.5rem;
    }

    .empty-subtitle {
        color: var(--text-secondary);
        margin-bottom: 2rem;
        line-height: 1.6;
    }

    /* Table Footer */
    .table-footer {
        background: var(--background-secondary);
        padding: 1rem 1.5rem;
        border-top: 1px solid var(--border-light);
        text-align: center;
        flex-shrink: 0;
    }

    .table-info {
        color: var(--text-secondary);
        font-size: 0.875rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .footer-icon {
        font-size: 1rem;
        opacity: 0.7;
    }
</style>