@model List<TrueTestRun.Models.Request>

@{
    ViewBag.Title = HttpContext.GetGlobalResourceObject("Resources", "RejectedRequestsTitle").ToString();
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentUser = Session["CurrentUser"] as TrueTestRun.Models.User;
}

<!-- Page Header with Japanese Corporate Styling -->
<div class="page-header">
    <div class="page-title-section">
        <h1 class="page-title">@ViewBag.Title</h1>
        <div class="page-subtitle">拒否された申請管理 | Rejected Request Management</div>
    </div>
    <div class="page-info">
        <div class="rejection-stats">
            <div class="stat-item">
                <span class="stat-icon">◯</span>
                <span class="stat-value">@(Model?.Count ?? 0)</span>
                <span class="stat-label">@HttpContext.GetGlobalResourceObject("Resources", "TotalRejected")</span>
            </div>
        </div>
    </div>
</div>

<!-- Status Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="notification success">
        <div class="notification-icon">✓</div>
        <div class="notification-content">
            <div class="notification-text">@TempData["SuccessMessage"]</div>
        </div>
        <button type="button" class="notification-close" onclick="this.parentElement.style.display='none'">×</button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="notification error">
        <div class="notification-icon">✕</div>
        <div class="notification-content">
            <div class="notification-text">@TempData["ErrorMessage"]</div>
        </div>
        <button type="button" class="notification-close" onclick="this.parentElement.style.display='none'">×</button>
    </div>
}

@if (!Model.Any())
{
    <!-- Empty State -->
    <div class="empty-state rejected">
        <div class="empty-state-icon">○</div>
        <div class="empty-state-title">@HttpContext.GetGlobalResourceObject("Resources", "NoRejectedRequests")</div>
        <div class="empty-state-description">Không có yêu cầu nào bị từ chối/拒否されたリクエストがありません </div>
        <div class="empty-state-subtitle">すべてのリクエストが承認されています</div>
    </div>
}
else
{
    <!-- Professional Rejected Requests Table -->
    <div class="data-table rejected-table">
        <!-- Table Header -->
        <div class="table-header">
            <div class="table-title">
                <div class="title-main">
                    <span class="title-icon">◯</span>
                    @HttpContext.GetGlobalResourceObject("Resources", "RejectedRequestsList")
                </div>
                <div class="title-sub">拒否された申請一覧 | All Rejected Requests</div>
            </div>
            <div class="table-actions">
                <button class="action-btn secondary" onclick="refreshTable()">
                    <span class="action-icon">↻</span>
                    @HttpContext.GetGlobalResourceObject("Resources", "Refresh")
                </button>
            </div>
        </div>

        <!-- Enhanced Table Content -->
        <div class="table-container">
            <table class="data-table-content" id="rejectedTable">
                <thead>
                    <tr>
                        <th class="col-id">Request ID</th>
                        <th class="col-date">@HttpContext.GetGlobalResourceObject("Resources", "CreatedDate")</th>
                        <th class="col-component">@HttpContext.GetGlobalResourceObject("Resources", "ComponentCode")</th>
                        <th class="col-component-name">@HttpContext.GetGlobalResourceObject("Resources", "ComponentName")</th>
                        <th class="col-supplier">@HttpContext.GetGlobalResourceObject("Resources", "Supplier")</th>
                        <th class="col-status">@HttpContext.GetGlobalResourceObject("Resources", "Status")</th>
                        <th class="col-reject-reason">@HttpContext.GetGlobalResourceObject("Resources", "RejectReason")</th>
                        <th class="col-reject-date">@HttpContext.GetGlobalResourceObject("Resources", "RejectedDate")</th>
                        <th class="col-actions">@HttpContext.GetGlobalResourceObject("Resources", "Actions")</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var request in Model.OrderByDescending(r => r.CreatedAt))
                    {
                        var rejectedStep = request.History?.FirstOrDefault(h => h.Status == "Rejected");

                        // Get component information from Excel via ViewBag
                        var componentInfo = ViewBag.ComponentInfo as Dictionary<string, Dictionary<string, string>>;
                        var maLinhKien = componentInfo?[request.RequestID]?["MaLinhKien"] ?? "—";
                        var tenLinhKien = componentInfo?[request.RequestID]?["TenLinhKien"] ?? "—";
                        var nhaCungCap = componentInfo?[request.RequestID]?["NhaCungCap"] ?? "—";

                        <tr class="table-row rejected-row">
                            <td class="col-id">
                                <a href="@Url.Action("Preview", "Request", new { id = request.RequestID })" class="request-id-link rejected">
                                    @request.RequestID
                                </a>
                            </td>
                            <td class="col-date">
                                <div class="date-info">
                                    <div class="date-primary">@request.CreatedAt.ToString("dd/MM/yyyy")</div>
                                    <div class="date-secondary">@request.CreatedAt.ToString("HH:mm")</div>
                                </div>
                            </td>
                            <td class="col-component">
                                <div class="cell-content component-code">@maLinhKien</div>
                            </td>
                            <td class="col-component-name">
                                <div class="cell-content component-name" title="@tenLinhKien">@tenLinhKien</div>
                            </td>
                            <td class="col-supplier">
                                <div class="cell-content supplier-name" title="@nhaCungCap">@nhaCungCap</div>
                            </td>
                            <td class="col-status">
                                <div class="status-badge rejected">
                                    <span class="status-indicator">○</span>
                                    <span class="status-text">Bị từ chối</span>
                                </div>
                            </td>
                            <td class="col-reject-reason">
                                @if (rejectedStep != null && !string.IsNullOrEmpty(rejectedStep.Comment))
                                {
                                    <div class="reject-reason">
                                        <div class="reason-text" title="@rejectedStep.Comment">@rejectedStep.Comment</div>
                                    </div>
                                }
                                else
                                {
                                    <div class="reason-unknown">@HttpContext.GetGlobalResourceObject("Resources", "NoReason")</div>
                                }
                            </td>
                            <td class="col-reject-date">
                                @if (rejectedStep?.ApprovedAt.HasValue == true)
                                {
                                    <div class="date-info rejection">
                                        <div class="date-primary rejected">@rejectedStep.ApprovedAt.Value.ToString("dd/MM/yyyy")</div>
                                        <div class="date-secondary rejected">@rejectedStep.ApprovedAt.Value.ToString("HH:mm")</div>
                                    </div>
                                }
                                else
                                {
                                    <div class="rejection-unknown">—</div>
                                }
                            </td>
                            <td class="col-actions">
                                <div class="action-buttons">
                                    <a href="@Url.Action("Preview", "Request", new { id = request.RequestID })"
                                       class="action-btn-small view rejected"
                                       title="@HttpContext.GetGlobalResourceObject("Resources", "ViewDetails")">
                                        ◉
                                    </a>
                                    @{
                                        bool canEdit = currentUser != null &&
                                                      currentUser.Title != null &&
                                                      currentUser.Title.Trim().Equals("Staff", StringComparison.OrdinalIgnoreCase) &&
                                                      request.CreatedByADID == currentUser.ADID;
                                    }
                                    @if (canEdit)
                                    {
                                        <a href="@Url.Action("Edit", "Request", new { id = request.RequestID })"
                                           class="action-btn-small edit rejected"
                                           title="@HttpContext.GetGlobalResourceObject("Resources", "Edit")">
                                            ◆
                                        </a>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Table Footer -->
        <div class="table-footer">
            <div class="table-info">
                <span class="footer-icon">ⓘ</span>
                @HttpContext.GetGlobalResourceObject("Resources", "ShowingResults") <strong>@Model.Count</strong> @HttpContext.GetGlobalResourceObject("Resources", "RejectedRequests")
            </div>
            <div class="rejection-summary">
                <span class="summary-text">要再検討 | Requires Review</span>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            // Auto dismiss notifications
            setTimeout(function () {
                $('.notification').fadeOut('slow');
            }, 5000);

            // Enhanced table interactions for rejected requests
            $('.rejected-row').hover(
                function () { $(this).addClass('hover'); },
                function () { $(this).removeClass('hover'); }
            );

            // Click to view details
            $('.rejected-row').on('click', function (e) {
                if (!$(e.target).closest('a').length) {
                    var detailLink = $(this).find('.request-id-link');
                    if (detailLink.length) {
                        window.location.href = detailLink.attr('href');
                    }
                }
            });

            // Professional loading state
            $('.action-btn-small').on('click', function () {
                $(this).addClass('loading');
            });
        });

        function refreshTable() {
            window.location.reload();
        }
    </script>
}

<style>
    /* ========== JAPANESE CORPORATE REJECTED REQUESTS DESIGN ========== */

    /* Page Header for Rejected Section */
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 1.5rem;
        padding-bottom: 1rem;
        border-bottom: 1px solid var(--border-light);
    }

    .page-title-section h1.page-title {
        font-size: 1.875rem;
        font-weight: 700;
        color: var(--error-red);
        margin: 0 0 0.25rem 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .page-title-section h1.page-title::before {
        content: '◯';
        color: var(--error-red);
        font-size: 1.2rem;
    }

    .page-subtitle {
        color: var(--text-secondary);
        font-size: 0.85rem;
        margin: 0;
        font-weight: 500;
    }

    .page-info {
        display: flex;
        align-items: center;
    }

    .rejection-stats {
        display: flex;
        align-items: center;
        gap: 1rem;
        background: var(--background-white);
        padding: 0.75rem 1.25rem;
        border-radius: 8px;
        border: 1px solid var(--border-light);
        box-shadow: var(--shadow-soft);
    }

    .stat-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .stat-icon {
        font-size: 1rem;
        color: var(--error-red);
        opacity: 0.8;
    }

    .stat-value {
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--error-red);
    }

    .stat-label {
        font-size: 0.8rem;
        color: var(--text-secondary);
        font-weight: 500;
    }

    /* Enhanced Empty State for Rejected */
    .empty-state.rejected {
        background: linear-gradient(135deg, #fef2f2 0%, #fee2e2 100%);
        border: 1px solid #fecaca;
        border-radius: 12px;
        padding: 3rem 2rem;
        text-align: center;
        box-shadow: var(--shadow-soft);
    }

    .empty-state.rejected .empty-state-icon {
        font-size: 3rem;
        color: var(--error-red);
        opacity: 0.6;
        margin-bottom: 1.5rem;
    }

    .empty-state.rejected .empty-state-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--error-red);
        margin-bottom: 0.5rem;
    }

    .empty-state.rejected .empty-state-description {
        font-size: 0.9rem;
        color: var(--text-secondary);
        margin-bottom: 0.25rem;
    }

    .empty-state.rejected .empty-state-subtitle {
        font-size: 0.8rem;
        color: var(--text-muted);
        font-style: italic;
    }

    /* Professional Rejected Table */
    .data-table.rejected-table {
        background: var(--background-white);
        border-radius: 12px;
        border: 1px solid var(--border-light);
        box-shadow: var(--shadow-medium);
        overflow: hidden;
        flex: 1;
        display: flex;
        flex-direction: column;
        height: calc(100vh - 240px);
        border-left: 4px solid var(--error-red);
    }

    .rejected-table .table-header {
        background: linear-gradient(180deg, #fef2f2, #fee2e2);
        padding: 1.25rem;
        border-bottom: 1px solid #fecaca;
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-shrink: 0;
    }

    .rejected-table .title-icon {
        color: var(--error-red);
    }

    /* Perfect Column Headers for Rejected Table */
    .rejected-table .data-table-content th {
        background: #fef2f2;
        border-bottom: 2px solid #fecaca;
        color: var(--error-red);
        font-weight: 700;
        padding: 1rem 1.25rem;
        text-align: left;
        font-size: 0.85rem;
        letter-spacing: 0.02em;
        position: sticky;
        top: 0;
        z-index: 10;
        vertical-align: middle;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .rejected-table .data-table-content td {
        padding: 1rem 1.25rem;
        border-bottom: 1px solid var(--border-light);
        font-size: 0.9rem;
        vertical-align: middle;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        color: var(--text-primary);
    }

    /* Rejected Row Styling */
    .rejected-row {
        background: #fffefe;
        transition: all 0.2s ease;
    }

    .rejected-row:nth-child(even) {
        background: #fefffe;
    }

    .rejected-row:hover,
    .rejected-row.hover {
        background: #fef2f2;
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(220, 38, 38, 0.1);
    }

    /* Enhanced Request ID for Rejected */
    .request-id-link.rejected {
        font-family: 'Consolas', 'Monaco', monospace;
        font-weight: 700;
        color: var(--error-red);
        text-decoration: none;
        padding: 0.4rem 0.6rem;
        border-radius: 999px;
        transition: all 0.2s ease;
        display: inline-block;
        font-size: 0.9rem;
        background: #fee2e2;
        border: 1px solid #fecaca;
    }

    .request-id-link.rejected:hover {
        background: #fecaca;
        color: var(--error-red);
        text-decoration: none;
        transform: translateY(-1px);
        border-color: #fca5a5;
        box-shadow: 0 2px 8px rgba(220, 38, 38, 0.2);
    }

    /* Professional Rejection Date Styling */
    .date-info {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        gap: 0.125rem;
    }

    .date-primary {
        font-weight: 600;
        color: var(--text-primary);
        line-height: 1.2;
        font-size: 0.9rem;
    }

    .date-secondary {
        font-size: 0.75rem;
        color: var(--text-secondary);
    }

    .date-info.rejection .date-primary.rejected {
        color: var(--error-red);
        font-weight: 600;
    }

    .date-info.rejection .date-secondary.rejected {
        color: #dc2626;
        opacity: 0.8;
    }

    .rejection-unknown {
        color: var(--text-muted);
        font-style: italic;
        text-align: center;
    }

    /* Status Badge for Rejected */
    .status-badge {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        padding: 0.5rem 0.875rem;
        border-radius: 999px;
        font-size: 0.8rem;
        font-weight: 600;
        border: 1px solid transparent;
        min-width: 110px;
        text-align: center;
        white-space: nowrap;
    }

    .status-badge.rejected {
        background: #fee2e2;
        border-color: #fecaca;
        color: var(--error-red);
    }

    .status-indicator {
        font-size: 0.9rem;
        flex-shrink: 0;
    }

    .status-text {
        font-size: 0.8rem;
        font-weight: 600;
    }

    /* Reject Reason Styling */
    .reject-reason {
        max-width: 200px;
    }

    .reason-text {
        font-size: 0.85rem;
        line-height: 1.4;
        color: var(--error-red);
        font-weight: 500;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .reason-unknown {
        color: var(--text-muted);
        font-style: italic;
        text-align: center;
        font-size: 0.85rem;
    }

    /* Enhanced Action Buttons for Rejected */
    .action-btn-small {
        width: 32px;
        height: 32px;
        border: 1px solid var(--border-light);
        border-radius: 6px;
        background: var(--background-white);
        color: var(--text-secondary);
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        transition: all 0.2s ease;
        font-size: 0.9rem;
        flex-shrink: 0;
    }

    .action-btn-small.view.rejected {
        background: #fef2f2;
        border-color: #fecaca;
        color: var(--error-red);
    }

    .action-btn-small.view.rejected:hover {
        background: #fee2e2;
        border-color: #fca5a5;
        color: var(--error-red);
        box-shadow: 0 2px 6px rgba(220, 38, 38, 0.15);
        transform: translateY(-2px);
        text-decoration: none;
    }

    .action-btn-small.edit.rejected {
        background: #fffbeb;
        border-color: #fde68a;
        color: var(--warning-amber);
    }

    .action-btn-small.edit.rejected:hover {
        background: #fef3c7;
        border-color: #fcd34d;
        color: var(--warning-amber);
        box-shadow: 0 2px 6px rgba(217, 119, 6, 0.15);
        transform: translateY(-2px);
        text-decoration: none;
    }

    .action-btn-small.loading {
        opacity: 0.7;
        pointer-events: none;
    }

    /* Professional Table Footer for Rejected */
    .rejected-table .table-footer {
        background: #fef2f2;
        border-top: 1px solid #fecaca;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 1.25rem;
        flex-shrink: 0;
    }

    .table-info {
        color: var(--text-secondary);
        font-size: 0.85rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .footer-icon {
        font-size: 0.9rem;
        opacity: 0.7;
    }

    .rejection-summary {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .summary-text {
        font-size: 0.8rem;
        color: var(--error-red);
        font-weight: 600;
    }

    /* Professional Component Information */
    .component-code {
        font-family: 'Consolas', 'Monaco', monospace;
        font-weight: 600;
        color: var(--corporate-blue);
        font-size: 0.85rem;
    }

    .component-name,
    .supplier-name {
        font-size: 0.85rem;
        line-height: 1.3;
        max-width: 150px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    /* Optimized Column Widths for Rejected Table */
    .col-id { width: 12%; }
    .col-date { width: 10%; }
    .col-component { width: 12%; }
    .col-component-name { width: 15%; }
    .col-supplier { width: 12%; }
    .col-status { width: 10%; text-align: center; }
    .col-reject-reason { width: 18%; }
    .col-reject-date { width: 10%; }
    .col-actions { width: 6%; text-align: center; }

    /* Notifications for Rejected Section */
    .notification {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 1rem 1.25rem;
        margin-bottom: 1.5rem;
        border-radius: 8px;
        border: 1px solid;
        font-size: 0.875rem;
        box-shadow: var(--shadow-soft);
    }

    .notification.success {
        background: #f0fdf4;
        border-color: var(--success-green);
        color: #166534;
    }

    .notification.error {
        background: #fef2f2;
        border-color: var(--error-red);
        color: #991b1b;
    }

    .notification-icon {
        font-size: 1.1rem;
        flex-shrink: 0;
    }

    .notification-close {
        background: none;
        border: none;
        color: inherit;
        cursor: pointer;
        font-size: 1.2rem;
        margin-left: auto;
        opacity: 0.7;
        transition: opacity 0.2s ease;
    }

    .notification-close:hover {
        opacity: 1;
    }

    /* Responsive Design for Rejected Table */
    @@media (max-width: 1024px) {
        .page-header {
            flex-direction: column;
            gap: 1rem;
            align-items: stretch;
        }

        .rejection-stats {
            justify-content: center;
        }

        .data-table.rejected-table {
            height: calc(100vh - 300px);
        }
    }

    @@media (max-width: 768px) {
        .page-title-section h1.page-title {
            font-size: 1.5rem;
        }

        .rejection-stats {
            padding: 0.5rem 1rem;
        }

        .rejected-table .table-header {
            flex-direction: column;
            gap: 1rem;
            align-items: stretch;
        }

        .data-table-content th,
        .data-table-content td {
            padding: 0.75rem 0.5rem;
            font-size: 0.85rem;
        }

        .rejected-table .table-footer {
            flex-direction: column;
            gap: 0.75rem;
            text-align: center;
        }

        .component-name,
        .supplier-name {
            max-width: 120px;
        }

        .reject-reason {
            max-width: 150px;
        }
    }

    @@media (max-width: 576px) {
        .data-table.rejected-table {
            height: calc(100vh - 250px);
            border-radius: 10px;
        }

        .rejected-table .table-header {
            padding: 0.75rem;
        }

        .data-table-content th,
        .data-table-content td {
            padding: 0.5rem 0.25rem;
            font-size: 0.8rem;
        }

        .action-btn-small {
            width: 28px;
            height: 28px;
            font-size: 0.8rem;
        }

        .component-name,
        .supplier-name {
            max-width: 100px;
        }

        .reject-reason {
            max-width: 120px;
        }
    }
</style>