@model List<TrueTestRun.Models.Request>
@{
    ViewBag.Title = ViewBag.CurrentPhaseTitle ?? HttpContext.GetGlobalResourceObject("Resources", "RequestListByPhase").ToString();
    Layout = "~/Views/Shared/_Layout.cshtml";
    var currentUser = Session["CurrentUser"] as TrueTestRun.Models.User;
    var phase = ViewBag.CurrentPhase as TrueTestRun.Models.TestRunPhase?;

    // Helper hàm cho phân quyền
    bool IsStaff = (currentUser != null && currentUser.Title != null)
        ? currentUser.Title.Trim().Equals("Staff", StringComparison.OrdinalIgnoreCase)
        : false;

    bool IsManagerOrGM = (currentUser != null && currentUser.Title != null) &&
        (
            currentUser.Title.Trim().Equals("Quản lý sơ cấp", StringComparison.OrdinalIgnoreCase)
            || currentUser.Title.Trim().Equals("Quản lý trung cấp", StringComparison.OrdinalIgnoreCase)
            || currentUser.Title.Trim().Equals("G.M", StringComparison.OrdinalIgnoreCase)
        );

    bool IsAdmin = (currentUser != null && currentUser.Role != null)
        ? currentUser.Role == TrueTestRun.Models.UserRole.Admin
        : false;
}

<!-- Page Header -->
<div class="page-header">
    <div class="page-title-section">
        <h1 class="page-title">@ViewBag.Title</h1>
        <div class="page-subtitle">テストラン申請管理システム | Test Run Request Management System</div>
    </div>
    @if (IsStaff)
    {
        <div class="page-actions">
            <a href="@Url.Action("Create", "Request")" class="action-btn primary">
                <span class="action-icon">⊕</span>
                @HttpContext.GetGlobalResourceObject("Resources", "CreateNewRequest")
            </a>
        </div>
    }
</div>

@* Render antiforgery token once for AJAX delete *@
@Html.AntiForgeryToken()

<!-- Professional Phase Navigation with Refined Icons -->
<div class="phase-navigation">
    <div class="phase-tabs">
        <a class="phase-tab @(phase == TrueTestRun.Models.TestRunPhase.TruocTestRun ? "active" : "")"
           href="@Url.Action("TruocTestRun", "Request")">
            <div class="tab-icon">◐</div>
            <div class="tab-content">
                <div class="tab-title">@HttpContext.GetGlobalResourceObject("Resources", "BeforeTestRun")</div>
                <div class="tab-subtitle">Preparation Phase</div>
            </div>
        </a>
        <a class="phase-tab @(phase == TrueTestRun.Models.TestRunPhase.GiuaTestRun ? "active" : "")"
           href="@Url.Action("GiuaTestRun", "Request")">
            <div class="tab-icon">◑</div>
            <div class="tab-content">
                <div class="tab-title">@HttpContext.GetGlobalResourceObject("Resources", "DuringTestRun")</div>
                <div class="tab-subtitle">Execution Phase</div>
            </div>
        </a>
        <a class="phase-tab @(phase == TrueTestRun.Models.TestRunPhase.SauTestRun ? "active" : "")"
           href="@Url.Action("SauTestRun", "Request")">
            <div class="tab-icon">◒</div>
            <div class="tab-content">
                <div class="tab-title">@HttpContext.GetGlobalResourceObject("Resources", "AfterTestRun")</div>
                <div class="tab-subtitle">Completion Phase</div>
            </div>
        </a>
    </div>
</div>

<!-- Status Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="notification success">
        <div class="notification-icon">✓</div>
        <div class="notification-content">
            <div class="notification-text">@TempData["SuccessMessage"]</div>
        </div>
        <button type="button" class="notification-close" onclick="this.parentElement.style.display='none'">×</button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="notification error">
        <div class="notification-icon">✕</div>
        <div class="notification-content">
            <div class="notification-text">@TempData["ErrorMessage"]</div>
        </div>
        <button type="button" class="notification-close" onclick="this.parentElement.style.display='none'">×</button>
    </div>
}

@if (!Model.Any())
{
    <!-- Empty State -->
    <div class="empty-state">
        <div class="empty-state-icon">◯</div>
        <div class="empty-state-title">@HttpContext.GetGlobalResourceObject("Resources", "NoRequestsYet")</div>
        <div class="empty-state-description">現在このフェーズにはリクエストがありません</div>
        @if (IsStaff)
        {
            <div class="empty-state-actions">
                <a href="@Url.Action("Create", "Request")" class="action-btn primary">
                    <span class="action-icon">⊕</span>
                    @HttpContext.GetGlobalResourceObject("Resources", "CreateFirstRequest")
                </a>
            </div>
        }
    </div>
}
else
{
    <!-- Ultra Compact Statistics Panel with Refined Icons -->
    <div class="statistics-panel">
        <div class="statistics-row">
            <div class="stat-item">
                <div class="stat-icon">◈</div>
                <div class="stat-content">
                    <div class="stat-number" id="totalCount">@Model.Count</div>
                    <div class="stat-label">@HttpContext.GetGlobalResourceObject("Resources", "TotalRequests")</div>
                </div>
            </div>
            <div class="stat-divider">|</div>
            <div class="stat-item">
                <div class="stat-icon">◐</div>
                <div class="stat-content">
                    <div class="stat-number" id="processingCount">@Model.Count(r => !r.IsCompleted && !r.IsRejected)</div>
                    <div class="stat-label">@HttpContext.GetGlobalResourceObject("Resources", "Processing")</div>
                </div>
            </div>
            <div class="stat-divider">|</div>
            <div class="stat-item">
                <div class="stat-icon">◑</div>
                <div class="stat-content">
                    <div class="stat-number" id="todayCount">@Model.Count(r => r.CreatedAt.Date == DateTime.Today)</div>
                    <div class="stat-label">@HttpContext.GetGlobalResourceObject("Resources", "Today")</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Maximized Data Table -->
    <div class="data-table">
        <!-- Table Header with Search -->
        <div class="table-header">
            <div class="table-title">
                <div class="title-main">
                    <span class="title-icon">◉</span>
                    @HttpContext.GetGlobalResourceObject("Resources", "RequestList")
                </div>
                <div class="title-sub">@ViewBag.CurrentPhaseTitle</div>
            </div>
            <div class="table-actions">
                <div class="search-container">
                    <div class="search-input-wrapper">
                        <span class="search-icon">◎</span>
                        <input type="text"
                               id="searchInput"
                               class="search-input"
                               placeholder="@HttpContext.GetGlobalResourceObject("Resources", "SearchPlaceholder1")" />
                        <button class="search-clear" id="clearSearch" style="display: none;">×</button>
                    </div>
                </div>
                <button class="action-btn secondary" onclick="refreshTable()">
                    <span class="action-icon">↻</span>
                    @HttpContext.GetGlobalResourceObject("Resources", "Refresh")
                </button>
            </div>
        </div>

        <!-- Enhanced Table Content with Perfect Column Alignment -->
        <div class="table-container">
            <table class="data-table-content" id="dataTable">
                <thead>
                    <tr>
                        <th class="col-id">Request ID</th>
                        <th class="col-date">@HttpContext.GetGlobalResourceObject("Resources", "CreatedDate")</th>
                        <th class="col-component">@HttpContext.GetGlobalResourceObject("Resources", "ComponentCode")</th>
                        <th class="col-component-name">@HttpContext.GetGlobalResourceObject("Resources", "ComponentName")</th>
                        <th class="col-supplier">@HttpContext.GetGlobalResourceObject("Resources", "Supplier")</th>
                        <th class="col-status">@HttpContext.GetGlobalResourceObject("Resources", "Step")</th>
                        <th class="col-actions">@HttpContext.GetGlobalResourceObject("Resources", "Actions")</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var request in Model)
                    {
                        var historyList = request.History?.OrderBy(h => h.Index).ToList();
                        TrueTestRun.Models.WorkflowStep currentStep = null;

                        if (historyList != null && historyList.Count > 0)
                        {
                            if (request.CurrentStepIndex >= 0 && request.CurrentStepIndex < historyList.Count)
                            {
                                currentStep = historyList[request.CurrentStepIndex];
                            }
                            else if (historyList.Count > 0)
                            {
                                currentStep = historyList.FirstOrDefault(s => s.Status == "Processing") ?? historyList[0];
                            }
                        }

                        bool canEdit = IsStaff && request.CreatedByADID == currentUser?.ADID && !request.IsCompleted && !request.IsRejected;
                        bool canApprove = IsManagerOrGM && currentStep != null &&
                            (currentStep.NextApproverADID == currentUser?.ADID
                            || (string.IsNullOrEmpty(currentStep.NextApproverADID)
                                && currentStep.DeptCode == currentUser?.DeptCode
                                && currentStep.Role == currentUser?.Title))
                            && !request.IsCompleted && !request.IsRejected;
                        bool canAdminEdit = IsAdmin;

                        // Lấy thông tin component để tìm kiếm - cũng bao gồm tên bước hiện tại
                        var componentInfo = ViewBag.ComponentInfo as Dictionary<string, Dictionary<string, string>>;
                        var maLinhKien = componentInfo?[request.RequestID]?["MaLinhKien"] ?? "";
                        var tenLinhKien = componentInfo?[request.RequestID]?["TenLinhKien"] ?? "";
                        var nhaCungCap = componentInfo?[request.RequestID]?["NhaCungCap"] ?? "";
                        var stepName = currentStep?.StepName ?? "";

                        <tr class="table-row" data-search="@($"{request.RequestID} {maLinhKien} {tenLinhKien} {nhaCungCap} {stepName} {request.CreatedAt:dd/MM/yyyy}".ToLower())">
                            <td class="col-id">
                                <a href="@Url.Action("Detail", "Request", new { id = request.RequestID })" class="request-id-link">
                                    @request.RequestID
                                </a>
                            </td>
                            <td class="col-date">
                                <div class="date-info">
                                    <div class="date-primary">@request.CreatedAt.ToString("dd/MM/yyyy")</div>
                                    <div class="date-secondary">@request.CreatedAt.ToString("HH:mm")</div>
                                </div>
                            </td>
                            <td class="col-component">
                                <div class="cell-content">@(maLinhKien == "" ? "—" : maLinhKien)</div>
                            </td>
                            <td class="col-component-name">
                                <div class="cell-content">@(tenLinhKien == "" ? "—" : tenLinhKien)</div>
                            </td>
                            <td class="col-supplier">
                                <div class="cell-content">@(nhaCungCap == "" ? "—" : nhaCungCap)</div>
                            </td>
                            <td class="col-status">
                                @if (request.IsCompleted)
                                {
                                    <div class="status-badge completed">
                                        <span class="status-indicator">●</span>
                                        <span class="status-text">@HttpContext.GetGlobalResourceObject("Resources", "Completed")</span>
                                    </div>
                                }
                                else if (request.IsRejected)
                                {
                                    <div class="status-badge rejected">
                                        <span class="status-indicator">○</span>
                                        <span class="status-text">@HttpContext.GetGlobalResourceObject("Resources", "Rejected")</span>
                                    </div>
                                }
                                else
                                {
                                    <div class="status-badge current-step" title="@(currentStep?.StepName ?? "Không xác định")">
                                        <span class="status-indicator">@(currentStep?.Index + 1 ?? 0)</span>
                                        <span class="status-text">@(currentStep?.StepName ?? "Không xác định")</span>
                                    </div>
                                }
                            </td>
                            <td class="col-actions">
                                <div class="action-buttons">
                                    <a href="@Url.Action("Detail", "Request", new { id = request.RequestID })"
                                       class="action-btn-small view" title="@HttpContext.GetGlobalResourceObject("Resources", "ViewDetails")">
                                        ◉
                                    </a>
                                    @if (canEdit || canAdminEdit)
                                    {
                                        <a href="@Url.Action("Edit", "Request", new { id = request.RequestID })"
                                           class="action-btn-small edit" title="@HttpContext.GetGlobalResourceObject("Resources", "Edit")">
                                            ◆
                                        </a>
                                    }
                                    @if (canApprove)
                                    {
                                        <a href="@Url.Action("ProcessRequest", "Approval", new { id = request.RequestID })"
                                           class="action-btn-small approve" title="@HttpContext.GetGlobalResourceObject("Resources", "ApprovalProcess")">
                                            ◈
                                        </a>
                                    }
                                    @if (!request.IsCompleted && !request.IsRejected)
                                    {
                                        <a href="javascript:void(0)"
                                           class="action-btn-small reminder"
                                           data-id="@request.RequestID"
                                           title="Gửi email nhắc nhở">
                                            📧
                                        </a>
                                    }
                                    @if (canEdit || canAdminEdit)
                                    {
                                        <a href="javascript:void(0)"
                                           class="action-btn-small delete"
                                           data-id="@request.RequestID"
                                           title="@HttpContext.GetGlobalResourceObject("Resources", "Delete")">
                                            ✖
                                        </a>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Table Footer -->
        <div class="table-footer">
            <div class="table-info">
                <span class="footer-icon">ⓘ</span>
                @HttpContext.GetGlobalResourceObject("Resources", "ShowingResults") <strong id="recordCount">@Model.Count</strong> @HttpContext.GetGlobalResourceObject("Resources", "RequestsInPhase")
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            // Search functionality
            $('#searchInput').on('input', function() {
                const searchTerm = $(this).val().toLowerCase().trim();
                const $clearBtn = $('#clearSearch');

                if (searchTerm) {
                    $clearBtn.show();
                } else {
                    $clearBtn.hide();
                }

                let visibleCount = 0;
                let processingCount = 0;
                let todayCount = 0;

                $('.table-row').each(function() {
                    const searchData = $(this).data('search');
                    const isVisible = !searchTerm || searchData.includes(searchTerm);

                    if (isVisible) {
                        $(this).show();
                        visibleCount++;

                        // Count processing and today requests for filtered results
                        const $statusBadge = $(this).find('.status-badge');
                        if ($statusBadge.hasClass('current-step')) {
                            processingCount++;
                        }

                        // Check if request was created today (extract from date cell)
                        const dateText = $(this).find('.date-primary').text();
                        const today = new Date().toLocaleDateString('en-GB'); // dd/MM/yyyy format
                        if (dateText === today) {
                            todayCount++;
                        }
                    } else {
                        $(this).hide();
                    }
                });

                // Update counters
                $('#recordCount').text(visibleCount);
                $('#totalCount').text(visibleCount);
                $('#processingCount').text(processingCount);
                $('#todayCount').text(todayCount);
            });

            // Clear search
            $('#clearSearch').on('click', function() {
                $('#searchInput').val('');
                $(this).hide();
                $('.table-row').show();

                // Reset counters to original values
                const totalRequests = @Model.Count;
                const originalProcessing = @Model.Count(r => !r.IsCompleted && !r.IsRejected);
                const originalToday = @Model.Count(r => r.CreatedAt.Date == DateTime.Today);

                $('#recordCount').text(totalRequests);
                $('#totalCount').text(totalRequests);
                $('#processingCount').text(originalProcessing);
                $('#todayCount').text(originalToday);
            });

            // Auto dismiss notifications
            setTimeout(function () {
                $('.notification').fadeOut('slow');
            }, 5000);

            // Table row hover effects
            $('.table-row').hover(
                function () { $(this).addClass('hover'); },
                function () { $(this).removeClass('hover'); }
            );

            // Enhanced table interactions
            $('.table-row').on('click', function (e) {
                if (!$(e.target).closest('a').length) {
                    var detailLink = $(this).find('.request-id-link');
                    if (detailLink.length) {
                        window.location.href = detailLink.attr('href');
                    }
                }
            });

            // Delete request handler
$(document).on('click', '.action-btn-small.delete', function (e) {
    e.stopPropagation();
    var id = $(this).data('id');
    if (!id) return;

    if (!confirm('Bạn có chắc chắn muốn xóa đơn ' + id + ' ?')) {
        return;
    }

    var token = $('input[name="__RequestVerificationToken"]').val();

    $.ajax({
        url: '@Url.Action("Delete", "Request")',
        method: 'POST',
        data: { id: id, __RequestVerificationToken: token },
        success: function (resp) {
            if (resp && resp.success) {
                // reload to update counters and table
                location.reload();
            } else {
                alert(resp && resp.message ? resp.message : 'Xóa thất bại.');
            }
        },
        error: function () {
            alert('Xóa thất bại do lỗi server.');
        }
    });
});

// Reminder email handler
$(document).on('click', '.action-btn-small.reminder', function (e) {
    e.stopPropagation();
    var id = $(this).data('id');
    if (!id) return;

    if (!confirm('Bạn có chắc chắn muốn gửi email nhắc nhở cho đơn ' + id + ' ?')) {
        return;
    }

    var token = $('input[name="__RequestVerificationToken"]').val();

    $.ajax({
        url: '@Url.Action("SendReminder", "Request")',
        method: 'POST',
        data: { id: id, __RequestVerificationToken: token },
        success: function (resp) {
            if (resp && resp.success) {
                alert(resp.message || 'Đã gửi email nhắc nhở thành công.');
            } else {
                alert(resp && resp.message ? resp.message : 'Gửi email nhắc nhở thất bại.');
            }
        },
        error: function () {
            alert('Gửi email nhắc nhở thất bại do lỗi server.');
        }
    });
});
        });

        function refreshTable() {
            window.location.reload();
        }
    </script>
}

<style>
    /* ========== PERFECTLY ALIGNED TABLE WITH REFINED ICONS ========== */
    .action-btn-small.reminder:hover {
        border-color: var(--warning-amber);
        background: #fffbeb;
        color: var(--warning-amber);
    }
    /* Page Header */
    .page-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 1rem;
        padding-bottom: 0.75rem;
        border-bottom: 1px solid var(--border-light);
    }

    .page-title-section h1.page-title {
        font-size: 1.75rem;
        font-weight: 600;
        color: var(--text-primary);
        margin: 0 0 0.25rem 0;
    }

    .page-subtitle {
        color: var(--text-secondary);
        font-size: 0.8rem;
        margin: 0;
    }

    .page-actions {
        display: flex;
        gap: 1rem;
    }

    /* Professional Phase Navigation with Geometric Icons */
    .phase-navigation {
        margin-bottom: 1rem;
    }

    .phase-tabs {
        display: flex;
        background: var(--background-white);
        border-radius: 8px;
        padding: 0.25rem;
        border: 1px solid var(--border-light);
        box-shadow: var(--shadow-soft);
    }

    .phase-tab {
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        padding: 0.75rem 1rem;
        text-decoration: none;
        color: var(--text-secondary);
        border-radius: 6px;
        transition: all 0.2s ease;
        text-align: center;
    }

        .phase-tab:hover {
            color: var(--text-primary);
            background: var(--background-secondary);
            text-decoration: none;
        }

        .phase-tab.active {
            color: var(--corporate-blue);
            background: var(--background-secondary);
            font-weight: 600;
            box-shadow: var(--shadow-subtle);
        }

    .tab-icon {
        font-size: 1.1rem;
        flex-shrink: 0;
        opacity: 0.8;
    }

    .tab-content {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .tab-title {
        font-size: 0.875rem;
        font-weight: 600;
        line-height: 1.2;
    }

    .tab-subtitle {
        font-size: 0.65rem;
        opacity: 0.7;
        margin-top: 0.125rem;
    }

    /* Notifications with Icons */
    .notification {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        padding: 0.75rem 1rem;
        margin-bottom: 1rem;
        border-radius: 6px;
        border: 1px solid;
        font-size: 0.875rem;
    }

        .notification.success {
            background: #f0fdf4;
            border-color: var(--success-green);
            color: #166534;
        }

        .notification.error {
            background: #fef2f2;
            border-color: var(--error-red);
            color: #991b1b;
        }

    .notification-icon {
        font-size: 1rem;
        flex-shrink: 0;
    }

    /* Empty State with Geometric Icon */
    .empty-state {
        background: var(--background-white);
        border-radius: 10px;
        padding: 2.5rem 2rem;
        text-align: center;
        border: 1px solid var(--border-light);
        box-shadow: var(--shadow-soft);
    }

    .empty-state-icon {
        font-size: 2.5rem;
        margin-bottom: 1rem;
        opacity: 0.4;
        color: var(--text-muted);
    }

    /* Statistics Panel with Geometric Icons */
    .statistics-panel {
        background: var(--background-white);
        border-radius: 8px; /* tăng nhẹ để đồng bộ với bảng */
        border: 1px solid var(--border-light);
        margin-bottom: 0.75rem;
        padding: 0.75rem 1rem;
        box-shadow: var(--shadow-soft);
        border-left: 4px solid var(--corporate-blue); /* nhấn mạnh khối thống kê */
    }

    .statistics-row {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1rem;
    }

    .stat-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        text-align: center;
    }

    .stat-icon {
        font-size: 1.1rem;
        flex-shrink: 0;
        opacity: 0.7;
        color: var(--corporate-blue);
    }

    .stat-content {
        display: flex;
        flex-direction: column;
    }

    .stat-number {
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--text-primary);
        line-height: 1;
        margin-bottom: 0.125rem;
    }

    .stat-label {
        font-size: 0.7rem;
        color: var(--text-secondary);
        line-height: 1.2;
    }

    .stat-divider {
        color: var(--border-medium);
        font-size: 1rem;
        opacity: 0.5;
    }

    /* Maximized Data Table (HIGHLIGHTED CARD) */
    .data-table {
        background: var(--background-white);
        border-radius: 12px;
        border: 1px solid var(--border-light);
        box-shadow: var(--shadow-medium); /* tăng độ nổi */
        overflow: hidden;
        flex: 1;
        display: flex;
        flex-direction: column;
        height: calc(100vh - 220px);
        border-left: 4px solid var(--corporate-blue); /* vạch nhấn thương hiệu */
    }

    .table-header {
        background: linear-gradient(180deg, var(--background-secondary), #e9edf3); /* nhẹ nhàng hơn, dễ nhìn */
        padding: 1rem 1.25rem;
        border-bottom: 1px solid var(--border-light);
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-shrink: 0;
    }

    .table-title .title-main {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 1.05rem;
        font-weight: 700;
        color: var(--text-primary);
        line-height: 1.2;
    }

    .title-icon {
        font-size: 1rem;
        opacity: 0.75;
        color: var(--corporate-blue);
    }

    .table-title .title-sub {
        font-size: 0.8rem;
        color: var(--text-secondary);
        margin-top: 0.125rem;
    }

    .table-actions {
        display: flex;
        gap: 0.75rem;
        align-items: center;
    }


    .search-container {
        min-width: 280px;
    }

    .search-input-wrapper {
        position: relative;
        display: flex;
        align-items: center;
    }

    .search-input {
        width: 100%;
        padding: 0.75rem 1rem 0.75rem 2.5rem;
        border: 1px solid var(--border-light);
        border-radius: 6px;
        font-size: 0.875rem;
        background: var(--background-white);
        transition: all 0.2s ease;
    }

        .search-input:focus {
            outline: none;
            border-color: var(--corporate-blue);
            box-shadow: 0 0 0 3px rgba(30, 58, 138, 0.1);
        }

    .search-icon {
        position: absolute;
        left: 0.75rem;
        color: var(--text-muted);
        font-size: 0.875rem;
        pointer-events: none;
        z-index: 1;
    }

    .search-clear {
        position: absolute;
        right: 0.5rem;
        background: none;
        border: none;
        color: var(--text-muted);
        padding: 0.25rem;
        border-radius: 3px;
        cursor: pointer;
        transition: all 0.2s ease;
        font-size: 1rem;
    }

        .search-clear:hover {
            background: var(--background-secondary);
            color: var(--text-primary);
        }

    /* Perfect Table Container */
    .table-container {
        flex: 1;
        overflow: auto;
        position: relative;
        background: #fcfdff;
    }

    .data-table-content {
        width: 100%;
        border-collapse: collapse;
        font-size: 0.9rem;
        table-layout: fixed;
    }

        /* Perfect Column Headers - HIGHER CONTRAST */
        .data-table-content th {
            background: var(--background-secondary);
            padding: 1rem 1.25rem;
            text-align: left;
            font-weight: 700;
            color: var(--text-primary);
            border-bottom: 2px solid var(--border-light);
            font-size: 0.85rem;
            letter-spacing: 0.02em;
            position: sticky;
            top: 0;
            z-index: 10;
            vertical-align: middle;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        /* Perfect Table Cells with Better Readability */
        .data-table-content td {
            padding: 1rem 1.25rem;
            border-bottom: 1px solid var(--border-light);
            font-size: 0.9rem;
            vertical-align: middle;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
            color: var(--text-primary);
        }

    /* Zebra striping + highlight */
    .table-row:nth-child(even) {
        background: #f7fbff;
    }

    .table-row {
        transition: all 0.15s ease;
        cursor: pointer;
    }

        .table-row:hover,
        .table-row.hover {
            background: #eff6ff;
            transform: translateY(-1px);
            box-shadow: var(--shadow-subtle);
        }

        .table-row:focus-within {
            outline: none;
            box-shadow: 0 0 0 3px rgba(30, 58, 138, 0.15);
            background: #eef4ff;
        }

    /* Standout Request ID "chip" */
    .request-id-link {
        font-family: 'Consolas', 'Monaco', monospace;
        font-weight: 700;
        color: var(--corporate-blue);
        text-decoration: none;
        padding: 0.4rem 0.6rem;
        border-radius: 999px;
        transition: all 0.2s ease;
        display: inline-block;
        font-size: 0.9rem;
        background: #eff6ff;
        border: 1px solid #bfdbfe;
    }

        .request-id-link:hover {
            background: #dbeafe;
            color: var(--corporate-blue);
            text-decoration: none;
            transform: translateY(-1px);
            border-color: #93c5fd;
            box-shadow: 0 1px 6px rgba(30,58,138,0.15);
        }

    /* Perfect Date Alignment */
    .date-info {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
        gap: 0.125rem;
    }

    .date-primary {
        font-weight: 600;
        color: var(--text-primary);
        line-height: 1.2;
        font-size: 0.9rem;
    }

    .date-secondary {
        font-size: 0.75rem;
        color: var(--text-secondary);
    }

    /* ENHANCED Status Badges with Step Names */
    .status-badge {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 0.4rem;
        padding: 0.4rem 0.7rem;
        border-radius: 999px;
        font-size: 0.75rem;
        font-weight: 600;
        border: 1px solid transparent;
        min-width: 140px; /* Tăng width để chứa tên step */
        max-width: 180px;
        text-align: center;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

        .status-badge.completed {
            background: #dcfce7;
            border-color: #bbf7d0;
            color: #166534;
        }

        .status-badge.rejected {
            background: #fee2e2;
            border-color: #fecaca;
            color: #991b1b;
        }

        .status-badge.current-step {
            background: #dbeafe;
            border-color: #93c5fd;
            color: #1e40af;
        }

    .status-indicator {
        font-size: 0.8rem;
        flex-shrink: 0;
        background: rgba(255, 255, 255, 0.8);
        color: var(--corporate-blue);
        border-radius: 50%;
        width: 18px;
        height: 18px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
    }

    .status-badge.completed .status-indicator {
        background: rgba(255, 255, 255, 0.9);
        color: #166534;
    }

    .status-badge.rejected .status-indicator {
        background: rgba(255, 255, 255, 0.9);
        color: #991b1b;
    }

    .status-text {
        font-size: 0.75rem;
        font-weight: 600;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    /* Action Buttons with Refined Icons */
    .action-btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        border: 1px solid var(--border-medium);
        border-radius: 6px;
        background: var(--background-white);
        color: var(--text-secondary);
        text-decoration: none;
        font-size: 0.8rem;
        font-weight: 500;
        transition: all 0.2s ease;
        cursor: pointer;
    }

        .action-btn:hover {
            border-color: var(--corporate-blue);
            color: var(--corporate-blue);
            text-decoration: none;
            transform: translateY(-1px);
        }

        .action-btn.primary {
            background: var(--corporate-blue);
            color: var(--background-white);
            border-color: var(--corporate-blue);
        }

            .action-btn.primary:hover {
                background: #1e40af;
                color: var(--background-white);
            }

        .action-btn.secondary {
            background: var(--background-secondary);
            border-color: var(--border-light);
        }

    .action-icon {
        font-size: 0.9rem;
        flex-shrink: 0;
    }

    /* PERFECT Action Buttons Alignment */
    .action-buttons {
        display: flex;
        gap: 0.375rem;
        justify-content: center;
        align-items: center;
        flex-wrap: nowrap;
    }

    .action-btn-small {
        width: 32px;
        height: 32px;
        border: 1px solid var(--border-light);
        border-radius: 6px;
        background: var(--background-white);
        color: var(--text-secondary);
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        transition: all 0.2s ease;
        font-size: 0.9rem;
        flex-shrink: 0;
    }

        .action-btn-small:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-soft);
            text-decoration: none;
        }

        .action-btn-small.view:hover {
            border-color: var(--corporate-blue);
            background: #eff6ff;
            color: var(--corporate-blue);
        }

        .action-btn-small.edit:hover {
            border-color: var(--warning-amber);
            background: #fffbeb;
            color: var(--warning-amber);
        }

        .action-btn-small.approve:hover {
            border-color: var(--success-green);
            background: #f0fdf4;
            color: var(--success-green);
        }

    /* Table Footer with Icon */
    .table-footer {
        background: var(--background-secondary);
        padding: 0.9rem 1.25rem;
        border-top: 1px solid var(--border-light);
        text-align: center;
        flex-shrink: 0;
    }

    .table-info {
        color: var(--text-secondary);
        font-size: 0.85rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
    }

    .footer-icon {
        font-size: 0.9rem;
        opacity: 0.7;
    }

    /* PERFECT COLUMN WIDTHS - Equal Distribution */
    .col-id {
        width: 14.28%;
    }

    .col-date {
        width: 14.28%;
    }

    .col-component {
        width: 14.28%;
    }

    .col-component-name {
        width: 14.28%;
    }

    .col-supplier {
        width: 14.28%;
    }

    .col-status {
        width: 14.28%;
        text-align: center;
    }

    .col-actions {
        width: 14.28%;
        text-align: center;
    }

    /* Responsive Design */
    @@media (max-width: 1024px) {
        .page-header {
            flex-direction: column;
            gap: 0.75rem;
            align-items: stretch;
        }

        .statistics-row {
            flex-direction: column;
            gap: 0.5rem;
        }

        .stat-divider {
            display: none;
        }

        .data-table {
            height: calc(100vh - 280px);
        }

        .table-header {
            flex-direction: column;
            gap: 0.75rem;
            align-items: stretch;
        }

        .table-actions {
            flex-direction: column;
            gap: 0.5rem;
        }

        .search-container {
            min-width: auto;
            width: 100%;
        }

        .status-badge {
            min-width: 120px;
            max-width: 150px;
        }
    }

    @@media (max-width: 768px) {
        .phase-tabs {
            flex-direction: column;
            padding: 0.25rem;
        }

        .phase-tab {
            padding: 0.5rem;
        }

        .tab-subtitle {
            display: none;
        }

        .statistics-panel {
            margin-bottom: 0.5rem;
            padding: 0.5rem;
        }

        .data-table {
            height: calc(100vh - 250px);
        }

        .data-table-content th,
        .data-table-content td {
            padding: 0.75rem 0.5rem;
            font-size: 0.85rem;
        }

        .action-buttons {
            flex-direction: column;
            gap: 0.25rem;
        }

        .action-btn-small {
            width: 28px;
            height: 28px;
            font-size: 0.8rem;
        }

        .status-badge {
            min-width: 100px;
            max-width: 120px;
            padding: 0.375rem 0.5rem;
            font-size: 0.7rem;
        }

        .status-text {
            font-size: 0.7rem;
        }

        .status-indicator {
            width: 16px;
            height: 16px;
            font-size: 0.7rem;
        }
    }

    @@media (max-width: 576px) {
        .page-title {
            font-size: 1.5rem;
        }

        .data-table {
            height: calc(100vh - 200px);
            border-radius: 10px;
        }

        .table-header {
            padding: 0.75rem;
        }

        .statistics-panel {
            padding: 0.5rem 0.75rem;
        }

        .stat-number {
            font-size: 1.125rem;
        }

        .stat-label {
            font-size: 0.65rem;
        }

        .data-table-content th,
        .data-table-content td {
            padding: 0.5rem 0.25rem;
            font-size: 0.8rem;
        }

        .status-badge {
            min-width: 90px;
            max-width: 110px;
            padding: 0.3rem 0.4rem;
            font-size: 0.65rem;
        }

        .status-text {
            font-size: 0.65rem;
        }

        .status-indicator {
            width: 14px;
            height: 14px;
            font-size: 0.6rem;
        }

        .action-btn-small {
            width: 26px;
            height: 26px;
            font-size: 0.75rem;
        }

        .search-container {
            min-width: auto;
        }

        .search-input {
            padding: 0.6rem 0.8rem 0.6rem 2rem;
            font-size: 0.8rem;
        }

        .search-icon {
            left: 0.6rem;
            font-size: 0.8rem;
        }
    }
</style>