@model TrueTestRun.Models.Request
@{ ViewBag.Title = "Xem trước đơn " + Model.RequestID;
    Layout = "~/Views/Shared/_Layout.cshtml"; }

<h2>@ViewBag.Title</h2>

<!-- Bảng dữ liệu đã nhập -->
@if (Model.Fields.Any())
{
    <table class="table table-bordered mb-4">
        <thead class="table-light">
            <tr><th>Field</th><th>Value</th></tr>
        </thead>
        <tbody>
            @foreach (var kv in Model.Fields)
            {
                <tr>
                    <td>@kv.Key</td>
                    <td>@kv.Value</td>
                </tr>
            }
        </tbody>
    </table>}

<!-- Ảnh preview Excel -->
<div class="mb-4">
    <h5>Preview file Excel</h5>
    <img src="@Url.Action("PreviewImage", "Request", new { id = Model.RequestID })"
         class="img-fluid border shadow-sm"
         alt="Xem trước Excel" />
</div>

@* Hiển thị thông tin tùy theo trạng thái *@
@if (Model.IsCompleted)
{
    <div class="alert alert-success">
        <span style="font-size:1em;">✅</span> <strong>Request này đã hoàn thành.</strong>
        Bạn chỉ có thể xem thông tin, không thể chỉnh sửa.
    </div>

    <a href="@Url.Action("Completed", "Request")" class="btn btn-secondary">
        <span style="font-size:1em;">⬅️</span> Quay lại danh sách đã hoàn thành
    </a>
}
else if (Model.IsRejected)
{
        var rejectedStep = Model.History?.FirstOrDefault(h => h.Status == "Rejected");

    <div class="alert alert-danger">
        <span style="font-size:1em;">❌</span> <strong>Request này đã bị từ chối.</strong>
        @if (rejectedStep != null && !string.IsNullOrEmpty(rejectedStep.Comment))
        {
            <br />
            <strong>Lý do:</strong> @rejectedStep.Comment
            if (rejectedStep.ApprovedAt.HasValue)
            {
                <br />
                <small>Từ chối lúc: @rejectedStep.ApprovedAt.Value.ToString("dd/MM/yyyy HH:mm")</small>
            }
        }
    </div>

    <div class="btn-group" role="group">
        <a href="@Url.Action("Rejected", "Request")" class="btn btn-secondary">
            <span style="font-size:1em;">⬅️</span> Quay lại danh sách NG
        </a>
        @{
            var currentUser = Session["CurrentUser"] as TrueTestRun.Models.User;
            bool canEdit = currentUser != null &&
                          currentUser.Title != null &&
                          currentUser.Title.Trim().Equals("Staff", StringComparison.OrdinalIgnoreCase) &&
                          Model.CreatedByADID == currentUser.ADID;
        }
        @if (canEdit)
        {
            <a href="@Url.Action("Edit", "Request", new { id = Model.RequestID })" class="btn btn-warning">
                <span style="font-size:1em;">✏️</span> Chỉnh sửa lại
            </a>
        }
    </div>
}
else
{
    <form action="@Url.Action("Confirm", "Request")" method="post">
        @Html.AntiForgeryToken()
        @Html.Hidden("id", Model.RequestID)

        <button type="submit" class="btn btn-primary">
            <span style="font-size:1em;">✓</span> Xác nhận
        </button>
        <a href="@Url.Action("Edit", "Request", new { id = Model.RequestID })" class="btn btn-secondary ms-2">
            <span style="font-size:1em;">↩️</span> Chỉnh sửa lại
        </a>
    </form>
}